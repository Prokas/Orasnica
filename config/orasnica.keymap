#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define APT 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4

&caps_word { continue-list = <UNDERSCORE MINUS BSPC LSHFT RSHFT>; };

/ {
    macros {
        fullscreen: fullscreen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(M)))>;
            label = "FULLSCREEN";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>;
            label = "SCREENSHOT";
        };
    };
};

/ { global-tapping-term-ms = <100>; };

#define COMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <20>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};

/ {
    combos {
        compatible = "zmk,combos";

        /* usually on base layer */

        COMBO(q, &kp Q, 1 2)
        COMBO(z, &kp Y, 5 6)
        COMBO(slash, &kp SLASH, 27 28)
        COMBO(dash, &kp MINUS, 26 27)
        COMBO(enter, &kp ENTER, 26 28)
        COMBO(esc, &kp ESC, 22 23)

        /* deletion */

        COMBO(bspc, &kp BSPC, 6 7)
        COMBO(del, &kp DEL, 7 8)
        COMBO(delword, &kp LC(BSPC), 6 8)
    };
};

/ {
    behaviors {
        hl: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods left";
            #binding-cells = <2>;

            // flavor = "tap-preferred";

            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;

            // global-quick-tap;

            bindings = <&kp>, <&kp>;

            // opposite side hand keys

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31>;
        };

        hr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods right";
            #binding-cells = <2>;

            // flavor = "tap-preferred";

            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;

            // global-quick-tap;

            bindings = <&kp>, <&kp>;

            // opposite side hand keys

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };

        my_lt: my_layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "my layer taps";
            #binding-cells = <2>;

            // flavor = "tap-preferred";

            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;

            // global-quick-tap;

            bindings = <&mo &kp>, <&kp>;

            // non-thumb keys
            // hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25>;
        };

        //   ____________________________  ____________________________
        //  / 0  |  1  |  2  |  3  |  4  \/   5 |   6 |   7 |   8 | 9  \
// | 10  | 11  | 12  | 13  | 14  /\  15 |  16 |  17 |  18 | 19  |
        // | 10  | 21  | 22  | 23  | 14 /  \ 15 |  26 |  27 |  28 | 29  |
        //            \  30  /    					  \  30  /
        //                       ------      ------

        dotcol: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comsem: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COM_SEM";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

&encoder { status = "okay"; };

&encoder2 { status = "okay"; };

/ {
    keymap {
        compatible = "zmk,keymap";

        macos {
            label = "proka";
            bindings = <
&kp K_MUTE    &kp W  &kp E       &kp R        &kp T           &kp Z               &kp U        &kp I       &kp O    &kp LC(UP_ARROW)
&hl LCTRL A   &kp S  &hl LGUI D  &hl LSHFT F  &kp G           &kp N               &hr RSHFT J  &hr RGUI K  &kp L    &kp P
&kp LG(LEFT)  &kp C  &kp V       &kp B        &my_lt 2 SPACE  &my_lt 3 BACKSPACE  &kp M        &comsem     &dotcol  &kp ENTER
                     &my_lt 1 X                                                                &my_lt 4 H
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_BRI_DEC C_BRIGHTNESS_INC>;
        };

        numbers {
            label = "NUM";
            bindings = <
&trans         &kp N9       &kp N8       &kp N7        &kp ASTERISK     &kp PLUS      &kp N7  &kp N8           &kp N9  &trans
&hl LCTRL N0   &hl LALT N6  &hl LGUI N5  &hl LSHFT N4  &hl RALT SLASH   &kp MINUS     &kp N4  &kp N5           &kp N6  &kp DOT
&kp LG(RIGHT)  &kp N3       &kp N2       &kp N1        &kp RIGHT_ARROW  &kp NUMBER_0  &kp N1  &kp N2           &kp N3  &kp COLON
                            &trans                                                            &kp KP_NUMBER_0
            >;

            sensor-bindings = <
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp PAGE_DOWN PAGE_UP
            >;
        };

        navigation {
            label = "NAV";
            bindings = <
&kp LC(LG(Q))  &kp LC(UP_ARROW)  &trans  &kp BSPC  &kp C_VOL_DN  &kp C_VOL_UP  &kp BSPC  &kp DEL         &trans           &bootloader
&kp LCTRL      &trans            &trans  &trans    &kp C_MUTE    &trans        &trans    &kp UP          &trans           &kp TAB
&trans         &trans            &trans  &trans    &trans        &trans        &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp COLON
                                 &trans                                                  &trans
            >;

            sensor-bindings = <
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp PAGE_DOWN PAGE_UP
            >;
        };

        symbols {
            label = "SYM";
            bindings = <
&trans    &kp GRAVE  &kp DQT   &kp RA(LS(SEMI))  &kp LBRC  &kp RBRC  &kp BACKSLASH  &kp PIPE      &kp LT       &kp GREATER_THAN
&kp EXCL  &kp AT     &kp HASH  &kp DOLLAR        &kp LPAR  &kp RPAR  &kp AMPERSAND  &kp ASTERISK  &kp PERCENT  &kp CARET
&trans    &kp TILDE  &kp SQT   &kp UNDERSCORE    &trans    &trans    &kp MINUS      &kp PLUS      &kp EQUAL    &trans
                     &kp RBKT                                                       &trans
            >;

            sensor-bindings = <
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp PAGE_DOWN PAGE_UP
            >;
        };

        function {
            label = "FUN";
            bindings = <
&bt BT_CLR      &kp SQT  &kp SEMICOLON  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp F12      &kp F7  &kp F8  &kp F9  &tog 6
&bt BT_CLR_ALL  &trans   &trans         &trans            &kp BACKSLASH      &kp F11      &kp F4  &kp F5  &kp F6  &kp F10
&trans          &trans   &trans         &trans            &fullscreen        &screenshot  &kp F1  &kp F2  &kp F3  &tog 5
                         &bt BT_DISC 0                                                            &trans
            >;

            sensor-bindings = <
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp PAGE_DOWN PAGE_UP
            >;
        };

        aitest {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &kp ENTER      &kp RIGHT_ARROW  &trans  &trans  &trans
&trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &kp PAGE_DOWN  &trans           &trans  &trans  &trans
&trans  &kp NUMBER_7  &kp NUMBER_8  &trans        &trans  &trans         &trans           &trans  &trans  &trans
                      &kp NUMBER_0                                                        &tog 5
            >;
        };

        gaming {
            bindings = <
&trans        &kp NUMBER_1  &kt NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &trans  &trans  &trans  &trans  &trans
&kp N5        &kp Q         &kp W         &kp E         &kp R         &trans  &trans  &trans  &trans  &trans
&kp NUMBER_6  &kp A         &kp S         &kp D         &kp F         &trans  &trans  &trans  &trans  &trans
                            &trans                                                    &tog 6
            >;
        };
    };
};
